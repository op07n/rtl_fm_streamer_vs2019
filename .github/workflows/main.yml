---
name: Build

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
      fail-fast: false

    steps:
      - name: Checkout repo CJSON
        uses: actions/checkout@v2
        with:
          repository: op07n/cJSON.git
          path: cJSON 

      - name: Build CJSON (Win32)
        if: startsWith(matrix.os, 'windows')
        run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
            cd -D "d:\a\rtl_fm_streamer_vs2019\rtl_fm_streamer_vs2019\cJSON\"
            dir
            mkdir build
            cd build
            cmake -G "Visual Studio 16 2019" -A Win32 -DCMAKE_BUILD_TYPE=Release ../"   
            cd $Env:GITHUB_WORKSPACE
        shell: cmd

      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build libev (Win32)
        if: startsWith(matrix.os, 'windows')
        run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
            cd librtlsdr/src/ev
            mkdir build
            cd build
            cmake -G "Visual Studio 16 2019" -A Win32 -DCMAKE_BUILD_TYPE=Release ../"
            msbuild ..\build\libev.sln  /p:Platform="Win32" /p:Configuration=Release
            cd ../../..
        shell: cmd


      - name: Build (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
            msbuild.exe  librtlsdr_vs2019/build.sln /p:Configuration=Release /p:Platform="Win32"
        shell: cmd

      - name: Upload artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v1
        with:
          name: rtl_fm_streamer_vs2019
          path: .
